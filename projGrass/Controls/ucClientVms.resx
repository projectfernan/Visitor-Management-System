<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbClient.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAA25JREFUeF7t
        mj1rFGEUhfNXjI2ChUHQSrTYpLBOEWJh4SLYiGAjop2FIBZa+ElU0ASDIEhAgxFREBUFURBBUX9CGjfZ
        zaa4vgN3MvHmZHZuMm8cd84DT5Pxzblz7jorOAOEEEIIIYQQQgghhBBCCCGW0RNnhK6v1hQPFEoztaZ4
        oFCaqTXFA4XSTK0pHjZw7tdyrbV9aE3xsIFoqDpp+9Ca4mED0VB10vahNcXDBqKh6qTtQ2uKhw1EQ9VJ
        24fWFA8biIaqk7YPrSkeNhANVTUff+vKxKeuXHjTkVPP23JkZlEOTS/I0O0W/PMebR9aUzxsIBpqq539
        uSxTX7py5cOSnHvVkeOzbRl9tCgH7rdkx82WbLv6GzoYRL/Po+1Da4qHDURDle2z4MOvXbn+cUnOv+7I
        ybn2yrU94VM8eA0X3EsuYJXpY+LSu87aT/GNtZ/i9Jz9uUcuILj/Xkt2goJ7mZ5H14rKBQRRMUXc7PlE
        LiCIiiniZs8ncgHBpARUTi/T8+haUbmAIBfgxAaioTxyAU5sIBrK40b/DZ+eR9eKygUEuQAnNhAN5XE7
        F+DDBqKhPHIBTmwgGqpO2j60pnjYQDRUnbR9aE3xsIFoKI//8hGUuHqWjWj70JriYQPRUB75HeDEBqKh
        PHIBTmwgGsojF+DEBqKhPHIBTmwgGsojF+DEBqKhPHIBTmwgGsojF+DEBqKhPHIBTmwgGsrj7gn/f8gn
        pufRtaJyAerTH/jFqsbUguy9ixeUnkXXisoFFHTme1fufO7KxbcdOf2iI80niyvX8t586yUXUJLrvfuZ
        /O3J+47hArbA5L3RyfB4u/x+Sc6+zB5vBydbsusWX87977V9aE3xsIFoqDpp+9Ca4mED0VB10vahNcXD
        BqKh6qTtQ2uKhw1EQ9VJ24fWFA8biIaqk7YPrSkeNpD+rdYUDxRKM7WmeKBQmqk1xQOF0kytKR4olGZq
        TfFAoTRTa+o/hseb4lGPkbJAJeepx0hZoJLz1GOkLFDJeeoxUhao5Dz1GCkLVHKeeoysZmTs2L6R8eZc
        KGjeFlYB55PZkhl13P6iMXZ0KNxk29x0FW0ns+rY/cPw4eY0uNlK2hhvPtCx+4dwY1V87KznvI7dP4Cb
        rLQ6dv+AbrLK6tiEEEIIIYQQQgghhBBCCCGbZGDgD55LzQCrlBE/AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="cmsCtrl.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="tmePing.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>109, 17</value>
  </metadata>
  <metadata name="bgwPing.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>206, 17</value>
  </metadata>
</root>